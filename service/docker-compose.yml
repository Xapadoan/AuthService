services:
  service:
    container_name: service
    build:
      context: ..
      dockerfile: ./service/Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - HOST=${HOST}
      - PORT=${PORT}
      - OCRSPACE_API_KEY=${OCRSPACE_API_KEY}
      - OCRSPACE_URL=${OCRSPACE_URL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - 8080:8080
  db:
    container_name: db
    image: mysql:8
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
    volumes:
      - ./mysql-data:/var/lib/mysql
    healthcheck:
      test: /usr/bin/mysql -h 127.0.0.1 --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD $$MYSQL_DATABASE --execute "SHOW TABLES;"
      interval: 5s
      timeout: 20s
      retries: 10
  redis:
    container_name: redis
    image: redis:7-alpine
